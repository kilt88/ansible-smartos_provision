{
  "autoboot": {% if autoboot %}true{% else %}false{% endif %}
, "brand": "{{ brand }}"
 {% if "lx" in brand %}
, "kernel_version": "{{ kernel_version }}"
 {% endif %}
, "firewall_enabled": {% if firewall_enabled %}true{% else %}false{% endif %}
{% if "joyent" in brand or "lx" in brand %}
{%   if image_uuid is defined %}
, "image_uuid": "{{ image_uuid }}"
{%   endif %}
, "max_physical_memory": {{ ram }}
{% else %}
, "ram": {{ ram }}
{% endif %}
, "cpu_cap": {{ cpu_cap }}
{% if "bhyve" in brand %}
{%   if bootrom is defined %}
, "bootrom": "{{ bootrom }}"
{%   endif %}
{%   if vcpus is defined %}
, "vcpus": {{ vcpus }}
{%   endif %}
{%   if bhyve_extra_opts is defined %}
, "bhyve_extra_opts": "{{ bhyve_extra_opts }}"
{%   endif %}
{% endif %}
, "alias": "{{ alias }}"
, "hostname": "{{ alias }}.{{ domain }}"
, "delegate_dataset": {% if delegate_zfs_dataset %}true{% else %}false{% endif %}
, "limit_priv": "{{ limit_priv }}"
, "dns_domain": "{{ domain }}"
, "dns_search": "{{ domain }}"
{% if quota is defined %}
, "quota": {{ quota }}
{% endif %}
, "resolvers": [
  {% for resolver in resolvers %}
    {% if loop.first %}
      "{{ resolver }}"
    {% else %}
      ,"{{ resolver }}"
    {% endif %}
  {% endfor %}
 ]
, "nics": [
 {% for nic in nics %}
  {
     {% if nic.primary is defined %}
     "primary": {{ nic.primary }},
     {% endif %}
     "interface": "{{ nic.interface }}"
     {% if nic.model is defined %}
   , "model": "{{ nic.model }}"
     {% endif %}
   , "nic_tag": "{{ nic.nic_tag }}"
   {% if nic.vlan_id is defined %}
   , "vlan_id": "{{ nic.vlan_id }}"
   {% endif %}
   , "ips":[
  {% for cidr in nic.ips %}
    {% if loop.first %}
      "{{ cidr }}"
    {% else %}
      ,"{{ cidr }}"
    {% endif %}
  {% endfor %}
 ]
   {% if nic.gateways is defined %}
   , "gateways": [
      {% for gateway in nic.gateways %}
        {% if loop.first %}
           "{{ gateway }}"
        {% else %}
          , "{{ gateway }}"
        {% endif %}
      {% endfor %}
 ]
   {% endif %}
   {% if nic.allowed_ips is defined %}
   , "allowed_ips": [
      {% for cidr in nic.allowed_ips %}
        {% if loop.first %}
          "{{ cidr }}"
        {% else %}
          ,"{{ cidr }}"
        {% endif %}
      {% endfor %}
 ]
   {% endif %}
{% if nic.allow_ip_spoofing is defined %}
   , "allow_ip_spoofing": {{ nic.allow_ip_spoofing }}
{% endif %}
{% if nic.allow_mac_spoofing is defined %}
   , "allow_mac_spoofing": {{ nic.allow_mac_spoofing }}
{% endif %}
{% if nic.allow_unfiltered_promisc is defined %}
   , "allow_unfiltered_promisc": {{ nic.allow_unfiltered_promisc }}
{% endif %}
  }
   {% if not loop.last %}
    ,
   {% endif %}
  {% endfor %}
 ]
{% if filesystems is defined %}
, "filesystems": [
  {% for fs in filesystems %}
    {
       "source": "{{ fs.source }}"
     , "target": "{{ fs.target }}"
     , "type": "lofs"
     , "options": [
        {% if fs.read_only %}
        "ro",
	{% endif %}
        "nodevices"
      ]
    }
    {% if not loop.last %}
      ,
    {% endif %}
  {% endfor %}
  ]
{% endif %}
{% if disks is defined %}
, "disks": [
{% for disk in disks %}
  {
    "size": {{ disk.size }}
  , "model": "{{ disk.model }}"
{% if disk.boot is defined %}
  , "boot": {{ disk.boot }}
{% endif %}
{% if disk.image_uuid is defined %}
  , "image_uuid": "{{ disk.image_uuid }}"
{% else %}
{%   if disk.media is defined %}
  , "media": "{{ disk.media }}"
{%   endif %}
{%   if disk.path is defined %}
  , "path": "{{ disk.path }}"
{%   endif %}
{%   if disk.nocreate is defined %}
  , "nocreate": {{ disk.nocreate }}
{%   endif %}
{%   if disk.compression is defined %}
  , "compression": "{{ disk.compression }}"
{%   endif %}
{% endif %}
  }
   {% if not loop.last %}
    ,
   {% endif %}
{% endfor %}
  ]
{%   if brand == 'bhyve' %}
{%     set flex_size = namespace(value=0) %}
{%     for disk in disks %}
{%       set flex_size.value = flex_size.value + disk.size %}
{%     endfor %}
{%     set flex_size.value = ( flex_size.value * flex_size_multiplier ) | int %}
  , "flexible_disk_size": "{{ flex_size.value }}"
{%   endif %}
{% endif %}

, "customer_metadata": {
      "root_authorized_keys": "{{ root_authorized_keys }}"
    , "user-script": "{{ user_script }}"
{% if cloudinit_custom is defined and cloudinit_custom != "" %}
    , "cloud-init:user-data": "{{ cloudinit_custom }}"
{% endif %}
  }
}
